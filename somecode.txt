//Settings for models and material
var geometry = new THREE.CubeGeometry( 1, 1, 1 );
geometry.applyMatrix( new THREE.Matrix4().makeTranslation( 0, 0.5, 0 ) );
var material = new THREE.MeshPhongMaterial({overdraw: true, color: 0xcccccc});

//Geometry to store all buildings of the city
var cityGeometry = new THREE.Geometry();
for (var i = 0; i < 300; i++) {

  //Create geometry as a clone
  var building = new THREE.Mesh(geometry.clone());

  //Randomize position and scale of the buildings
  building.position.x = Math.floor( Math.random() * 200 - 100 ) * 4;
  building.position.z = Math.floor( Math.random() * 200 - 100 ) * 4;
  building.scale.x  = Math.pow(Math.random(), 2) * 50 + 10;
  building.scale.y  = Math.pow(Math.random(), 3) * building.scale.x * 8 + 8;
  building.scale.z  = building.scale.x;

  //Merge all buildings to one model - cityGeometry
  THREE.GeometryUtils.merge(cityGeometry, building);
}

//Mesh of the city
var city = new THREE.Mesh(cityGeometry, material);

//Cast shadows of the models
city.castShadow = true;
city.receiveShadow = true;
scene.add(city);


/*window.addEventListener("keydown", checkKeyPressed, false);

function checkKeyPressed(e) {
   if (e.keyCode == "72") {
       console.log(camera.position.y);
       console.log(camera.position.z);
       console.log(camera.rotation.x);
   }
} */


/*   var geo = new THREE.PlaneGeometry(2000, 2000, 40, 40);
   var mat = new THREE.MeshPhongMaterial({color: 0x9db3b5, overdraw: true});
   var floor = new THREE.Mesh(geo, mat);
   floor.rotation.x = -0.5 * Math.PI;
   floor.receiveShadow = true;
   scene.add(floor); */
